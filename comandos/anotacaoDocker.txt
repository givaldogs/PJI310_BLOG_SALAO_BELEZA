C:\Users\gival\PJI310_BLOG_SALAO_BELEZA
C:\Users\gival\PJI310_BLOG_SALAO_BELEZA\dotenv_files\.venv
C:\Users\gival\PJI310_BLOG_SALAO_BELEZA\requirements.txt
C:\Users\gival\PJI310_BLOG_SALAO_BELEZA\djangoapp\requirements.txt
C:\Users\gival\PJI310_BLOG_SALAO_BELEZA\djangoapp\manage.py
professor
PJI310_BLOG_SALAO_BELEZA/
├── djangoapp/
|----project/
|------- __init__.py
|-------- asgi.py , settings.py, urls.py, wsgi.py
│   ├── manage.py
│   ├── requirements.txt

o meu fica na raiz projeto, ou seja nao esta dentro da pasta djangoapp
C:\Users\gival\PJI310_BLOG_SALAO_BELEZA\project

https://github.com/givaldogs/PJI310_BLOG_SALAO_BELEZA.git

https://github.com/givaldogs/Univesp-PJI310-SALA-002-GRUPO-022.git

comandos do docker
=====================
para recriar o conteiner, toda vez
que voce alterar o .env ou docker-compose.yml ou Dockerfile
docker-compose up --build --force-recreate

===============
Os logs ficam “escondidos”, mas você pode vê-los depois com:
docker-compose logs
======================
Para parar os containers em background, você usa:
docker-compose down
==================================


========================
ver o conteiner que ja tem
docker ps -a 
==============================
apagar conteiner
docker rm xxxx xxxx
---------------------------
apagar imagem
docker rmi xxxx 
-----------------------------
para executar o blog dentro do container
docker-compose run --rm djangoapp python -v
-----------------
para ver as variaveis de ambiente:
docker-compose run --rm djangoapp /bin/sh -c'echo $SECRET_KEY'
========================

